# EJEMPLO DEL USO DE CICLOS FOR Y DECLARACION DE FUNCION CON FUN

FUN oopify(prefix) -> prefix + "oop"

FUN join(elements, separator)
	VAR result = ""
	VAR len = LEN(elements)

	FOR i = 0 TO len THEN
		VAR result = result + elements/i
		IF i != len - 1 THEN VAR result = result + separator
	END

	RETURN result
END

FUN map(elements, func)
	VAR new_elements = []

	FOR i = 0 TO LEN(elements) THEN
		APPEND(new_elements, func(elements/i))
	END

	RETURN new_elements
END

PRINT("HOLA MUNDO!")

FOR i = 0 TO 5 THEN
	PRINT(join(map(["l", "sp"], oopify), ", "))
END

#EJEMPLO PARA USO DE OPERACIONES ARITMETICAS

VAR a = 6
VAR b = 12

VAR result = a + b
VAR result1 = a - b
VAR result2 = a*b
VAR result3 = b/a
PRINT("El resultado de la suma es:")
PRINT(result)
PRINT("El resultado de la resta es:")
PRINT(result1)
PRINT("El resultado de la multiplicacion es:")
PRINT(result2)
PRINT("El resultado de la division es:")
PRINT(result3)

# EJEMPLO DEL USO DE CICLOS FOR Y DECLARACION DE FUNCION CON FUN

FUN xdify(prefix) -> prefix + "xd"

FUN join(elements, separator)
	VAR result = ""
	VAR len = LEN(elements)

	FOR i = 0 TO len THEN
		VAR result = result + elements/i
		IF i != len - 1 THEN VAR result = result + separator
	END

	RETURN result
END

FUN map(elements, func)
	VAR new_elements = []

	FOR i = 0 TO LEN(elements) THEN
		APPEND(new_elements, func(elements/i))
	END

	RETURN new_elements
END

PRINT("HOLA MUNDO!")

FOR i = 0 TO 5 THEN
	PRINT(join(map(["lol", "futbol"], xdify), ", "))
END

# Ejemplo para probar el compilador

FUN AddSuffix(word, suffix) -> word + suffix

FUN GenerateList(elements, suffix)
    VAR result = []

    FOR i = 0 TO LEN(elements) THEN
        APPEND(result, AddSuffix(elements/i, suffix))
    END

    RETURN result
END

VAR words = ["casa", "perro", "gato"]
VAR new_words = GenerateList(words, "-suffix")

PRINT("Palabras originales:")
PRINT(words)

PRINT("Palabras con sufijo:")
PRINT(new_words)

#Ejemplo de factoriales
FUN str(value)
    RETURN value + ""
END

FUN factorial(n)
    VAR result = 1

    IF n < 0 THEN
        RETURN "Error: No existe factorial para números negativos"
    END

    FOR i = 1 TO n + 1 THEN
        VAR result = result * i
    END

    RETURN result
END

VAR fact5 = factorial(5)
PRINT("Factorial de 5:")
PRINT(factorial(5))


#Ejemplo de variables y asignaciones básicas
VAR x = 5
PRINT(x)

#Ejemplo de expresiones ARITMETICAS
VAR result = 10 + 5 * 2
PRINT(result)

#Ciclos y condicionales
VAR i = 0
WHILE i < 3 THEN
    PRINT(i)
    VAR i = i + 1
END

#SECUENCIA DE FIBONACCI
FUN fibonacci(n)
    VAR a = 0
    VAR b = 1
    VAR count = 0
    VAR result = [a, b]  # Lista para almacenar la secuencia

    WHILE count < n - 2 THEN
        VAR next = a + b
        APPEND(result, next)
        VAR a = b
        VAR b = next
        VAR count = count + 1
    END

    RETURN result
END

FUN sum_elements(elements)
    VAR sum = 0
    VAR i = 0

    WHILE i < LEN(elements) THEN
        VAR sum = sum + elements/i
        VAR i = i + 1
    END

    RETURN sum
END

VAR sequence = fibonacci(10)
PRINT("Secuencia de Fibonacci (10 términos): ")
PRINT(sequence)
PRINT("Suma de los elementos: ")
PRINT(sum_elements(sequence))

#Funciones
FUN Square(x) -> x * x
PRINT(Square(4))

#Declaracio y uso básico
VAR a = 10
VAR b = 5
VAR sum = a + b
PRINT("La suma de a y b es:")
PRINT(sum)

FUN categorize_number(num)
    IF num < 0 THEN
        RETURN "Negativo"
    ELIF num == 0 THEN
        RETURN "Cero"
    ELSE
        RETURN "Positivo"
    END
END

PRINT(categorize_number(-10))  # Salida: Negativo
PRINT(categorize_number(0))   # Salida: Cero
PRINT(categorize_number(25))  # Salida: Positivo



#Ciclos y condicionales
VAR x = 5
PRINT("Cuenta regresiva:")
WHILE x > 0 THEN
    PRINT(x)
    VAR x = x - 1
END
PRINT("¡Despegue!")

#Funciones y llamadas
FUN Square(num) -> num * num

FUN Cube(num)
    RETURN num * num * num
END

PRINT("El cuadrado de 3 es:")
PRINT(Square(3))

PRINT("El cubo de 2 es:")
PRINT(Cube(2))

#Error léxico 1
VAR x = 10
VAR y = 20
VAR z = x $ y  # El símbolo '$' no es reconocido
PRINT(z)

#Error léxico 2
VAR $nombre = "ESCOM"

#Error léxico 3
VAR resultado = 10 @ 5

#Error léxico 4
VAR numero = 10.10.10

#Error léxico 5
VAR resultado = 10 5


#Error sintactico 1
VAR x = 10
IF x > 5    # Falta la palabra clave THEN
    PRINT("x es mayor que 5")
END

#Error sintáctico 2
VAR x = 10
FOR i = 1 TO 5   # Falta 'THEN' al final de la declaración del FOR
    PRINT(i)
END

#Error sintactico 3
VAR x = 10
VAR y =  # Falta un valor en la asignación
PRINT(x + y)

#Error sintactico 4
FUN saludo nombre)
    RETURN "Hola " + nombre
END

#Error sintactico 5
IF x > 5
    PRINT("Mayor que 5")
END

#Error sintactico 6
FUN saludo(nombre, apellido)
    RETURN "Hola " + nombre + " " + apellido
END

PRINT(saludo("ESCOM"))

#Error sintatico 7
VAR lista = [1, 2, 3


#Error semántico 1
PRINT(x)  # Error: 'x' no está inicializado

#Error semántico 2
VAR x = 10
VAR y = 0
PRINT(x / y)  # Error: División por cero

#Error semántico 3
VAR x = 10
VAR y = "texto"
PRINT(x + y)  # Error: No se puede sumar un número con una cadena

#Error semántico 4
VAR lista = [1, 2, 3]
PRINT(lista/5)  # Error: Índice fuera de rango






