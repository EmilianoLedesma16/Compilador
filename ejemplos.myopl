# EJEMPLO DEL USO DE CICLOS FOR Y DECLARACION DE FUNCION CON FUN

FUN oopify(prefix) -> prefix + "oop"

FUN join(elements, separator)
	VAR result = ""
	VAR len = LEN(elements)

	FOR i = 0 TO len THEN
		VAR result = result + elements/i
		IF i != len - 1 THEN VAR result = result + separator
	END

	RETURN result
END

FUN map(elements, func)
	VAR new_elements = []

	FOR i = 0 TO LEN(elements) THEN
		APPEND(new_elements, func(elements/i))
	END

	RETURN new_elements
END

PRINT("HOLA MUNDO!")

FOR i = 0 TO 5 THEN
	PRINT(join(map(["l", "sp"], oopify), ", "))
END

#EJEMPLO PARA USO DE OPERACIONES ARITMETICAS

VAR a = 6
VAR b = 12

VAR result = a + b
VAR result1 = a - b
VAR result2 = a*b
VAR result3 = b/a
PRINT("El resultado de la suma es:")
PRINT(result)
PRINT("El resultado de la resta es:")
PRINT(result1)
PRINT("El resultado de la multiplicacion es:")
PRINT(result2)
PRINT("El resultado de la division es:")
PRINT(result3)

# EJEMPLO DEL USO DE CICLOS FOR Y DECLARACION DE FUNCION CON FUN

FUN xdify(prefix) -> prefix + "xd"

FUN join(elements, separator)
	VAR result = ""
	VAR len = LEN(elements)

	FOR i = 0 TO len THEN
		VAR result = result + elements/i
		IF i != len - 1 THEN VAR result = result + separator
	END

	RETURN result
END

FUN map(elements, func)
	VAR new_elements = []

	FOR i = 0 TO LEN(elements) THEN
		APPEND(new_elements, func(elements/i))
	END

	RETURN new_elements
END

PRINT("HOLA MUNDO!")

FOR i = 0 TO 5 THEN
	PRINT(join(map(["lol", "futbol"], xdify), ", "))
END

# Ejemplo para probar el compilador

FUN AddSuffix(word, suffix) -> word + suffix

FUN GenerateList(elements, suffix)
    VAR result = []

    FOR i = 0 TO LEN(elements) THEN
        APPEND(result, AddSuffix(elements/i, suffix))
    END

    RETURN result
END

VAR words = ["casa", "perro", "gato"]
VAR new_words = GenerateList(words, "-suffix")

PRINT("Palabras originales:")
PRINT(words)

PRINT("Palabras con sufijo:")
PRINT(new_words)

#Ejemplo de variables y asignaciones básicas
VAR x = 5
PRINT(x)

#Ejemplo de expresiones ARITMETICAS
VAR result = 10 + 5 * 2
PRINT(result)

#Ciclos y condicionales
VAR i = 0
WHILE i < 3 THEN
    PRINT(i)
    VAR i = i + 1
END

#Funciones
FUN Square(x) -> x * x
PRINT(Square(4))

#Errores
VAR x = 
PRINT(x)

#Declaracio y uso básico
VAR a = 10
VAR b = 5
VAR sum = a + b
PRINT("La suma de a y b es:")
PRINT(sum)

#Ciclos y condicionales
VAR x = 5
PRINT("Cuenta regresiva:")
WHILE x > 0 THEN
    PRINT(x)
    VAR x = x - 1
END
PRINT("¡Despegue!")

#Funciones y llamadas
FUN Square(num) -> num * num

FUN Cube(num)
    RETURN num * num * num
END

PRINT("El cuadrado de 3 es:")
PRINT(Square(3))

PRINT("El cubo de 2 es:")
PRINT(Cube(2))

#Error léxico
VAR x = 10
VAR y = 20
VAR z = x $ y  # El símbolo '$' no es reconocido
PRINT(z)

#Error sintactico
VAR x = 10
IF x > 5    # Falta la palabra clave THEN
    PRINT("x es mayor que 5")
END

#Error sintáctico
VAR x = 10
FOR i = 1 TO 5   # Falta 'THEN' al final de la declaración del FOR
    PRINT(i)
END

#Error sintactico
VAR x = 10
VAR y =  # Falta un valor en la asignación
PRINT(x + y)





